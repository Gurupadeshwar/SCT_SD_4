import requests
from bs4 import BeautifulSoup
import pandas as pd
import tkinter as tk
from tkinter import messagebox
from tkinter import filedialog

def scrape_flipkart(query):
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)'
    }
    search_url = f"https://www.flipkart.com/search?q={query.replace(' ', '+')}"
    response = requests.get(search_url, headers=headers)
    soup = BeautifulSoup(response.content, 'html.parser')

    product_names = []
    product_prices = []
    product_ratings = []

    # Handle multiple HTML structures on Flipkart
    items = soup.find_all("div", {"class": "_1AtVbE"})

    for item in items:
        name_tag = item.find("div", {"class": "_4rR01T"}) or item.find("a", {"class": "s1Q9rs"})
        price_tag = item.find("div", {"class": "_30jeq3"})
        rating_tag = item.find("div", {"class": "_3LWZlK"})

        if name_tag and price_tag:
            product_names.append(name_tag.get_text(strip=True))
            product_prices.append(price_tag.get_text(strip=True))
            product_ratings.append(rating_tag.get_text(strip=True) if rating_tag else "N/A")

    return pd.DataFrame({
        "Product Name": product_names,
        "Price": product_prices,
        "Rating": product_ratings
    })

# GUI App
def run_gui():
    def start_scraping():
        query = entry.get()
        if not query:
            messagebox.showerror("Input Error", "Please enter a product name.")
            return
        try:
            df = scrape_flipkart(query)
            if df.empty:
                messagebox.showinfo("No Results", "No products found.")
                return
            # Ask user where to save CSV
            file_path = filedialog.asksaveasfilename(defaultextension=".csv",
                                                     filetypes=[("CSV Files", "*.csv")],
                                                     title="Save as")
            if file_path:
                df.to_csv(file_path, index=False)
                messagebox.showinfo("Success", f"Data saved to {file_path}")
        except Exception as e:
            messagebox.showerror("Error", f"Failed to scrape: {str(e)}")

    # GUI setup
    root = tk.Tk()
    root.title("Flipkart Product Scraper")
    root.geometry("400x200")

    label = tk.Label(root, text="Enter product to search on Flipkart:")
    label.pack(pady=10)

    entry = tk.Entry(root, width=40)
    entry.pack(pady=5)

    button = tk.Button(root, text="Scrape & Save", command=start_scraping)
    button.pack(pady=20)

    root.mainloop()

if __name__ == "__main__":
    run_gui()
